2605 줄 세우기
앞에서부터 A B C D E로 있다면
A는 0 만
B는 0, 1 중 하나만
C는 0, 1, 2 중 하나만
D는 0, 1, 2, 3 중 하나만
E는 0, 1, 2, 3, 4 중 하나만
뽑아서 그 수만큼 앞으로 땡기는거다.
문제 예시처럼
5명이 각각 0 1 1 3 2를 뽑았을 때
0 : A B C D E
1 : B A C D E
1 : B C A D E
3 : D B C A E
2 : D B E C A
의 순으로 바뀌게 된다.

이걸 어떻게 구현하느냐? 수에 대한 예시는 문제와 동일하게 하였다
우선 학생의 수를 입력받아 변수에다 저장하자.
그리고 그 각 학생들이 뽑은 수를 입력하게 하여 리스트에 저장하자.
우선 학생이 그 수만큼 줄을 섰을 것인데 차례로 1부터 5까지 수를 부여하여 리스트에 저장하자. 
이 리스트는 나중에 순서를 변경하였을 때 출력할 리스트에 도움이 될 것이라 생각한다.
그럼 지금까지 생성된 자료들은
학생수인 5명, 그 학생들이 초기에 선 순서대로 1 2 3 4 5 라고 부여된 리스트, 학생들이 뽑은 수 5개가 있는 리스트 이다.
학생정의 리스트와 학생이 뽑은 수 리스트는 함께 따라가야할 것이다.
뽑은 수만큼 자리를 땡기는거니까,
그 수만큼 앞으로 땡겨서 insert 해주고, 원래 자리에 있던 요소는 delete 해주면 될 것으로 생각한다.
만약 3을 뽑은 D가 이동하는 걸 생각해보자
이전 순서에 따라 B C A D E 였다. 현 위치는 4번째에 위치해있고 이동해야할 위치는 4에서 3을 뺀 1번째에 위치해야 한다.
현 위치의 인덱스에서 뽑은 수를 뺀 위치에 새로 추가한다. 그러면 다음과 같은 배열이 될 것이다.
D B C A D E
1번째에 D가 들어온 동시에 5번째 자리에도 있다. 따라서 이 것을 없애줘야 하는데,
원래 위치인 4번째에서 하나 늘었다. 원래 위치 앞에 하나가 더 늘었기 때문에 순서가 하나씩 밀리게 되는 것이다 
따라서 원래위치에서 하나 더한 인덱스에 위치한 요소를 제거하면 다시 5명으로 맞춰지게 될 것이다.
.
.
.
라고 생각할 수 있지만 이건 너무 생각을 깊게 한 것 같다.
굳이 학생들이 초기에 선 순서대로 1 2 3 4 5 라고 부여된 리스트를 만들어서 넣었다 뺐다 하지말자...
그냥 리스트 넣을때부터 insert 함수 써서 순서맞춰서 넣으면 되는거였는데 이렇게까지 복잡하게 한다고.? 헠

queue.insert(i-picknum[i], i+1) # insert(삽입 위치, 삽입 할 요소)
i-picknum[i] -> 원래 삽입 위치보다 뽑은 수만큼 앞 당겨진 위치
i+1 -> 원래 인덱스가 0부터니까 자연수 맞춰주려고 1씩 더함

ex) picknum = [0, 1, 1, 3, 2]

i=0) queue.insert(0,1) → ans=[1]
i=1) queue.insert(0,2) → ans=[2,1]
i=2) queue.insert(1,3) → ans=[2,3,1]
i=3) queue.insert(0,4) → ans=[4,2,3,1]
i=4) queue.insert(2,5) → ans=[4,2,5,3,1]
