n = 1 : 1 -> 1개
n = 2 : 1+1 2 -> 2개
n = 3 : 1+1+1 2+1 1+2 3 -> 4개
n = 4 : 1+1+1+1 2+1+1 1+2+1 1+1+2 2+2 3+1 1+3 -> 7개
n = 5 : 1+1+1+1+1 2+1+1+1 1+2+1+1 1+1+2+1 1+1+1+2 3+1+1 1+3+1 1+1+3 2+2+1 2+1+2 1+2+2 3+2 2+3 -> 13개
n = 4인 경우 7은 n = 1인 경우 1, n = 2인 경우 2, n = 3인 경우 4의 합과 같다.
n = 5인 경우 13도 n = 2인 경우 2, n = 3인 경우 4, n = 4인 경우 7의 합과 같다.
위에서 알 수 있듯이 n을 1, 2, 3의 합으로 나타내는 경우의 수는 n-3인 경우 + n-2인 경우 + n-1인 경우와 같다.
이를 점화식으로 표현해보면 d[n] = d[n-1] + d[n-2] + d[n-3] 이다. 단 n은 4 이상부터 적용이 된다.
따라서 n이 1~3인건 따로 넣어주면 될 듯 하다.
이런 내용을 바탕으로 코드의 절차를 생각해보면, 
n이 1~3까지는 경우의 수 저장 배열 d에 수동으로 넣어주고, 반복문을 이용하여 4부터 입력받은 n까지 점화식을 계산하면 될 듯 하다.

dp의 완전 기본격인 문제 느낌이다. 점화식을 찾았고 이를 반복문으로 적용시켰다.
(dp 내용 참조 : https://hongjw1938.tistory.com/47)
