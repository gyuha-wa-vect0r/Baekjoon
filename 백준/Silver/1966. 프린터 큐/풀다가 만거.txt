"""
1966
 FIFO - First In First Out -> 요청 들어온 순서대로 결과를 내놓는다
 문서 개수 입력 -> 인쇄 순서가 궁금한 특정 문서 위치(0번째 ~ (개수-1)번째 내) 입력
 -> 각 문서들의 중요도 입력
 마지막 상황처럼 중요도가 겹치게 된다면 가장 중요한 문서가 가장 먼저 빠지고 나머지는 
 초기 순서 그대로 유지.
 ex) 5 4 #문서 5개, 4번째 번호(0,1,2,3,4 중 1개)의 문서의 인쇄 순서가 어떻게 돼?
     1 1 2 6 4 #문서 별 중요도 입력, (Queue 순서는 0부터 시작이다!)

     중요도 : 1 1 2 6 4
     문서번호: 0 1 2 3 4
     
     중요도 : 6 4 2 1 1
     인쇄문서: 3 4 2 0 1
     
     인쇄순서: 1 2 3 4 5

     -> 2

  결론은 뭐다? 중요도에 따라 문서를 재정렬하고 인쇄순서를 1부터 차례로 부여한다.
  그러기 위해서는 딕셔너리로 문서번호랑 중요도를 묶을 것이다. 
  입력 때 문서 번호를 입력받는다. 같이 묶어주면 이해가 편할 듯.
  정렬 후 찾는 문서번호의 위치+1 한 값을 출력하면 됨.
"""

t = int(input())

for _ in range(t):
  n, m = map(int, input().split())
  importance = list(map(int, input().split()))
  document = list(range(n))
  group = dict(zip(importance, document))  # 중요도가 key, 문서번호가 value
  group = sorted(group.items(), reverse=True)
  queue = list(group.values())
  print(queue.index(int(m)) + 1)
